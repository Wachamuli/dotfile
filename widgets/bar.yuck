(defwidget bar_widget []
  (box
    :class "bar-widget"
    :orientation "h"
    :space-evenly true
    (box
      :class "bar-containers"
      :halign "start"
      :space-evenly false
      (workspaces_widget)
    )
    (box
      :class "bar-containers"
      :halign "center"
      :orientation "h"
      :space-evenly false
      (pressable
        :onclick "${EWW_EXECUTABLE} open --toggle calendar_window && ${EWW_EXECUTABLE} update is_calendar_open=${!is_calendar_open}"
        (smalldate_widget)
      )
    )
    (box
      :class "bar-containers"
      :halign "end"
      :orientation "h"
      :space-evenly false
      ; :spacing 5
      ; More opts
      (revealer
        :reveal is_systrays_open
        :transition "slideleft"
        :duration "200ms"
        (systray
          :icon-size 20
        )
      )
      (pressable
        :onclick "${EWW_EXECUTABLE} update is_systrays_open=${!is_systrays_open}"
        (icon
          :path {is_systrays_open ? "chevron-left.svg" :  "chevron-down.svg" }
        )
      )
      
      (keyboard_layout_widget)
      
      (separator)
      
      (indicators)
      
      ; (pressable
        ;   :onclick "${EWW_EXECUTABLE} open --toggle calendar_window && ${EWW_EXECUTABLE} update is_calendar_open=${!is_calendar_open}"
        ;   (smalldate_widget)
      ; )
      
      (separator)
      
      ; (power_opts)
      (pressable
        (power_icon)
      )
    )
  )
)

(defwidget more_opts []
  (box
    (revealer
      :reveal is_systrays_open
      :transition "slideleft"
      (systray
        :space-evenly true
        :icon-size 20
      )
    )
    (pressable
      :onclick "${EWW_EXECUTABLE} update is_systrays_open=${!is_systrays_open}"
      (icon
        :path {is_systrays_open ? "chevron-left.svg" :  "chevron-down.svg" }
      )
    )
  )
)

(defwidget keyboard_layout_widget []
  (label
    :style "font-weight: bold; font-size: 14px; margin-right: 5px; margin-left: 5px;"
    :text {keyboard_layout.abbreviated_active_keymap}
  )
)

(defwidget indicators []
  (pressable
    :onclick "${EWW_EXECUTABLE} open --toggle controls_window"
    (box
      :spacing 5
      (bluetooth_icon)
      (wifi_icon)
      (sound_icon)
      (battery_icon)
    )
  )
)

(defwidget power_opts []
  (box
    (eventbox
      :onhover "${EWW_EXECUTABLE} update is_power_open=true"
      :onhoverlost "${EWW_EXECUTABLE} update is_power_open=false"
      (box
        (revealer
          :duration "200ms"
          :reveal is_power_open
          :transition "slideleft"
          (box
            :spacing 5
            (pressable
              (icon :tooltip "Restart" :path "restart.svg")
            )
            (pressable
              :onclick "hyprctl dispatch exit"
              (icon :tooltip "Logout"  :path "logout.svg")
            )
            (pressable
              (icon :tooltip "Lockscreen" :path "lock.svg")
            )
            (pressable
              :onclick "shutdown now"
              (power_icon)
            )
          )
        )
        (icon
          :path {is_power_open ? "triple_dots.svg" : "power.svg"}
        )
      )
    )
  )
  
)

(defwidget workspaces_widget []
  (box
    :spacing 1
    :class "workspaces-container"
    (for workspace in {workspaces.actives}
      (icon
        :path {
        workspace == workspaces.focused
        ? "workspace-active.svg" :
        workspace > arraylength(workspaces.actives) - 1
        ? "workspace-create.svg"
        : "workspace-inactive.svg"
        }
      )
    )
  )
)

(defwidget smalldate_widget []
  (label :class "date" :text today)
  ; (box
    ;   (
      ;     button
      ;     :onclick "${EWW_EXECUTABLE} open --toggle calendar_window"
      ;     today
    ;   )
  ; )
)

(defwidget bluetooth_icon []
  (icon
    :visible {bluetooth.state == "no"}
    :path "bluetooth-on.svg"
  )
  
)

(defwidget location_icon []
  (icon
    :visible {location.state == "active"}
    :path "location-on.svg"
  )
)

(defwidget battery_icon []
  (
    icon
    :visible {EWW_BATTERY == "" ? false : true}
    :tooltip "Battery ${battery.percentage}%"
    :path {
    battery.state == "discharging"
    ? "battery-${battery.percentage_base10}.svg"
    : "battery-charging-${battery.percentage_base10}.svg"
    }
  )
)

; FIXME: You get errors when the wifi is disabled
(defwidget wifi_icon []
  (icon
    :tooltip "Connected to ${wifi.name}"
    :path {
    wifi.state == "yes" ?
    wifi.signal > 77
    ? "wififull.svg"
    : wifi.signal > 44 ? "wifihalf.svg"
    : "wifimin.svg"
    : "wifidisconnected.svg"
    }
  )
)

(defwidget sound_icon []
  (icon
    :tooltip {sound.muted == "no" ? "Volume " + sound.volume + "%" : "Muted"}
    :path {
    "${sound.muted}" == "no"
    ? sound.volume > 65 ? "volume-up.svg"
    : sound.volume > 30 ? "volume-middle.svg"
    : "volume-down.svg"
    : "volume-mute.svg"
    }
  )
)


(defwidget power_icon []
  (icon
    :tooltip "Shutdown"
    :path "power.svg"
  )
)

(defwidget brightness_icon []
  (icon
    :path "brightness.svg"
  )
)