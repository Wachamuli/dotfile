(defwidget bar_widget []
  (box
    :class "bar-widget"
    :orientation "h"
    :space-evenly true
    (box
      :class "bar-containers"
      :halign "start"
      :orientation "h"
      :space-evenly false
      (workspaces_widget)
    )
    (box
      :class "bar-containers"
      :halign "center"
      :orientation "h"
      :space-evenly false
      (pressable
        :onclick "${EWW_EXECUTABLE} open --toggle calendar_window && ${EWW_EXECUTABLE} update is_calendar_open=${!is_calendar_open}"
        (smalldate_widget)
      )
    )
    (box
      :class "bar-containers"
      :halign "end"
      :orientation "h"
      :space-evenly false
      :spacing 5
      (revealer
        :reveal is_systrays_open
        :transition "slideleft"
        (systray
          :icon-size 20
        )
      )
      (pressable
        :onclick "${EWW_EXECUTABLE} update is_systrays_open=${!is_systrays_open}"
        (icon
          :path {is_systrays_open ? images_folder + "chevron-left.svg" :  images_folder + "chevron-down.svg" }
        )
      )
      (pressable
        :width 80
        :onclick "${EWW_EXECUTABLE} open --toggle controls_window"
        (location_icon)
        (bluetooth_icon )
        (wifi_icon)
        (sound_icon)
        (battery_icon)
      )
    )
  )
)

(defwidget pressable [?onclick ?onhover ?onhoverlost ?width]
  (eventbox
    :class "pressable"
    :onclick onclick
    :onhover onhover
    :onhoverlost onhoverlost
    (box :width {width ?: 0}
      (children)
    )
  )
)


(defwidget workspaces_widget []
  (box
    :spacing 1
    :class "workspaces-container"
    (for workspace in {workspaces.actives}
      (icon
        :path {workspace == workspaces.focused
        ? images_folder + "workspace-active.svg"
        : images_folder + "workspace-inactive.svg"
        }
      )
    )
  )
)

(defwidget smalldate_widget []
  (box
    :width 100
    (label :class "date" :text today)
  )
  ; (box
    ;   (
      ;     button
      ;     :onclick "${EWW_EXECUTABLE} open --toggle calendar_window"
      ;     today
    ;   )
  ; )
)

(defwidget bluetooth_icon []
  (icon
    :visible {bluetooth.state == "no"}
    :path {images_folder + "bluetooth-on.svg"}
  )
  
)

(defwidget location_icon []
  (image
    :visible {location.state == "active"}
    :valign "center"
    :image-width 25
    :image-height 25
    :path {images_folder + "location-on.svg"}
  )
)

(defwidget battery_icon []
  (
    icon
    :visible {EWW_BATTERY == "" ? false : true}
    :tooltip "Battery ${battery.percentage}%"
    :path {
    "${battery.state}" == "discharging"
    ? images_folder + "battery-${battery.percentage_base10}.svg"
    : images_folder + "battery-charging-${battery.percentage_base10}.svg"
    }
  )
)

; FIXME: You get errors when the wifi is disabled
(defwidget wifi_icon []
  (icon
    :tooltip "Connected to ${wifi.name}"
    :path {
    "${wifi.state}" == "yes" ?
    wifi.signal > 77
    ? images_folder + "wififull.svg"
    : wifi.signal > 44 ? images_folder + "wifihalf.svg"
    : images_folder + "wifimin.svg"
    : images_folder + "wifidisconnected.svg"
    }
  )
)

(defwidget sound_icon []
  (icon
    :tooltip {sound.muted == "no" ? "Volume " + sound.volume + "%" : "Muted"}
    :path {
    "${sound.muted}" == "no"
    ? sound.volume > 65 ? images_folder + "volume-up.svg"
    : sound.volume > 30 ? images_folder + "volume-middle.svg"
    : images_folder + "volume-down.svg"
    : images_folder + "volume-mute.svg"
    }
  )
)


(defwidget power_icon []
  (icon
    :path {images_folder + "power.svg"}
  )
)

(defwidget brightness_icon []
  (icon
    :path {images_folder + "brightness.svg"}
  )
)